{"version":3,"sources":["webpack:///./node_modules/@docpocalypse/gatsby-theme/src/components/JsDocMembers-CssProp1_li.module.css","webpack:///./node_modules/gatsby-plugin-mdx/index.js","webpack:///./node_modules/@docpocalypse/gatsby-theme/src/components/JsDocDescription-CssProp1_div.module.css","webpack:///./node_modules/@docpocalypse/gatsby-theme/src/components/JsDocTitleSignature-CssProp1_div.module.css","webpack:///./node_modules/@docpocalypse/gatsby-theme/src/components/HookSignature-styles.module.css","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack:///./node_modules/@docpocalypse/gatsby-theme/src/components/HookPage-SignatureList.module.css","webpack:///./node_modules/@docpocalypse/gatsby-theme/src/components/JsDocTypeExpression-styles.module.css","webpack:///./node_modules/@docpocalypse/gatsby-theme/src/components/HookSignature-CssProp1_LinkedHeading.module.css","webpack:///./node_modules/@docpocalypse/gatsby-theme/src/components/Example.tsx","webpack:///./node_modules/@docpocalypse/gatsby-theme/src/components/utils/jsDocTypeExpression.ts","webpack:///./node_modules/@docpocalypse/gatsby-theme/src/components/JsDocTypeExpression.tsx","webpack:///./node_modules/@docpocalypse/gatsby-theme/src/components/JsDocTypeWrapper.tsx","webpack:///./node_modules/@docpocalypse/code-live/themes/ultramin/index.js","webpack:///./node_modules/@docpocalypse/gatsby-theme/src/components/InlineTypeHighlight.tsx","webpack:///./node_modules/@docpocalypse/gatsby-theme/src/components/JsDocFunctionSignature.tsx","webpack:///./node_modules/@docpocalypse/gatsby-theme/src/components/JsDocTypeSignature.tsx","webpack:///./node_modules/@docpocalypse/gatsby-theme/src/components/JsDocTitleSignature.tsx","webpack:///./node_modules/@docpocalypse/gatsby-theme/src/components/JsDocExamples.tsx","webpack:///./node_modules/@docpocalypse/gatsby-theme/src/components/JsDocMembers.tsx","webpack:///./node_modules/@docpocalypse/gatsby-theme/src/components/JsDocDescription.tsx","webpack:///./node_modules/@docpocalypse/gatsby-theme/src/components/JsDocReturnBlock.tsx","webpack:///./node_modules/@docpocalypse/gatsby-theme/src/components/JsDocBlock.tsx","webpack:///./node_modules/@docpocalypse/gatsby-theme/src/components/HookSignature.tsx","webpack:///./node_modules/@docpocalypse/gatsby-theme/src/components/HookPage.tsx","webpack:///./node_modules/@docpocalypse/gatsby-theme/src/templates/hook.tsx","webpack:///./node_modules/@docpocalypse/gatsby-theme/src/components/JsDocTypeWrapper-JsDocWrapper.module.css","webpack:///./node_modules/@docpocalypse/gatsby-theme/src/components/ComponentImport.tsx"],"names":["module","exports","MDXRenderer","require","React","useMDXComponents","mdx","useMDXScope","scope","components","children","props","mdxComponents","mdxScope","End","fullScope","keys","Object","values","key","fn","Example","example","name","pre","useMemo","frontmatter","body","typeExpression","type","elements","map","join","expression","applications","plain","color","backgroundColor","styles","types","style","InlineHighlight","code","useHighlight","theme","language","tokens","getTokenProps","line","i","Fragment","token","ii","String","JsDocFunctionSignature","block","definition","ignoreParams","params","filter","param","includes","optional","returns","length","JsDocTypeWrapper","TypeComponent","className","JsDocSignature","fallbackToName","isFunctionDef","recursive","typeDef","title","JsDocExample","level","examples","Heading","dangerouslySetInnerHTML","__html","highlighted","JsDocMembers","properties","description","JsDocReturnBlock","def","depth","JsDocBlock","nextLevel","HookPageTemplate","pageQuery","ComponentImport","importName","docNode","highlight"],"mappings":"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","file":"component---node-modules-docpocalypse-gatsby-theme-src-templates-hook-tsx-77f19eb7cb8677431b67.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cls1\":\"JsDocMembers-CssProp1_li-module--cls1--WWdwA\",\"cls2\":\"JsDocMembers-CssProp1_li-module--cls2--_9_1b JsDocMembers-CssProp1_li-module--cls1--WWdwA\"};","/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cls1\":\"JsDocDescription-CssProp1_div-module--cls1--1KYlW\",\"cls2\":\"JsDocDescription-CssProp1_div-module--cls2--2FYL6 JsDocDescription-CssProp1_div-module--cls1--1KYlW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cls1\":\"JsDocTitleSignature-CssProp1_div-module--cls1--3PUvR\",\"cls2\":\"JsDocTitleSignature-CssProp1_div-module--cls2--3_gOf JsDocTitleSignature-CssProp1_div-module--cls1--3PUvR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"HookSignature\":\"HookSignature-styles-module--HookSignature--1g3dh\",\"count\":\"HookSignature-styles-module--count--3W_Vh\"};","const React = require(`react`)\nconst { useMDXComponents, mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  components,\n  children,\n  ...props\n}) {\n  const mdxComponents = useMDXComponents(components)\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, { components: mdxComponents, ...props })\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cls1\":\"HookPage-SignatureList-module--cls1--t6xvg\",\"cls2\":\"HookPage-SignatureList-module--cls2--29qUi HookPage-SignatureList-module--cls1--t6xvg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"JsDocTypeExpression\":\"JsDocTypeExpression-styles-module--JsDocTypeExpression--1LKRE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cls1\":\"HookSignature-CssProp1_LinkedHeading-module--cls1--1z8ez\",\"cls2\":\"HookSignature-CssProp1_LinkedHeading-module--cls2--OwNyU HookSignature-CssProp1_LinkedHeading-module--cls1--1z8ez\"};","import { MDXProvider } from '@mdx-js/react';\nimport { graphql } from 'gatsby';\nimport { MDXRenderer } from 'gatsby-plugin-mdx';\nimport { useMDXScope } from 'gatsby-plugin-mdx/context';\nimport React, { useMemo } from 'react';\n\nimport BasePre from './Pre';\n\ninterface Props {\n  example: any;\n  name: string;\n}\n\nexport default function Example({ example, name }: Props) {\n  const scope = useMDXScope();\n  const pre = useMemo(() => {\n    return props => <BasePre {...props} name={name} />;\n  }, [name]);\n\n  return example ? (\n    <MDXProvider components={{ pre }}>\n      <MDXRenderer scope={{ frontmatter: example.frontmatter, ...scope }}>\n        {example.body}\n      </MDXRenderer>\n    </MDXProvider>\n  ) : null;\n}\n\nexport const fragment = graphql`\n  fragment Example_example on DocpocalypseExample {\n    body\n  }\n`;\n","function typeExpression(type): string {\n  if (!type) return '';\n\n  if (type.type === `RecordType`) {\n    return 'object';\n  }\n  if (type.type === `NameExpression`) {\n    return type.name;\n  }\n  if (type.type === `VoidLiteral`) {\n    return 'void';\n  }\n  if (type.type === `NullLiteral`) {\n    return 'null';\n  }\n  if (type.type === `UndefinedLiteral`) {\n    return 'undefined';\n  }\n  if (type.type === 'FunctionType') {\n    return 'function';\n  }\n  if (type.type === `UnionType`) {\n    return type.elements.map(typeExpression).join(' | ');\n  }\n  // tuples [number, string]\n  if (type.type === `ArrayType`) {\n    return `[${type.elements.map(typeExpression).join(', ')}]`;\n  }\n\n  if (type.type === `TypeApplication` && type.expression) {\n    if (type.expression.name === `Array`) {\n      return `${typeExpression(type.applications[0])}[]`;\n    }\n    return `${typeExpression(type.expression)}<${typeExpression(\n      type.applications[0],\n    )}>`;\n  }\n\n  return '';\n}\n\nexport default typeExpression;\n","import React from 'react';\nimport cn from 'classnames';\nimport { css as dcss } from 'astroturf';\nimport typeExpression from './utils/jsDocTypeExpression';\n\nconst styles = dcss`\n  @component JsDocTypeExpression {\n    @apply text-accent;\n  }\n`;\n\nexport default function JsDocTypeExpression({ type, className }) {\n  return (\n    <span className={cn(className, styles.JsDocTypeExpression)}>\n      {typeExpression(type)}\n    </span>\n  );\n}\n","/* eslint-disable react/no-array-index-key */\n\nimport dstyled from 'astroturf';\n\nconst JsDocWrapper = dstyled('span')<{ block?: boolean }>`\n  @component JsDocTypeWrapper & {\n    @apply font-mono;\n\n    font-size: initial;\n    display: inline-block;\n\n    &.block {\n      display: block;\n      margin-top: 20px;\n    }\n    &:before,\n    &:after {\n      color: #969584;\n    }\n    &:before {\n      content: '{ ';\n    }\n    &:after {\n      content: ' }';\n    }\n  }\n`;\n\nexport default JsDocWrapper;\n","// Original: https://github.com/damienstanton/ultramin\n// Converted automatically using ./tools/themeFromVsCode\nvar theme = {\n  plain: {\n    color: '#282a2e',\n    backgroundColor: '#ffffff'\n  },\n  styles: [{\n    types: ['comment'],\n    style: {\n      color: 'rgb(197, 200, 198)'\n    }\n  }, {\n    types: ['string', 'number', 'builtin', 'variable'],\n    style: {\n      color: 'rgb(150, 152, 150)'\n    }\n  }, {\n    types: ['class-name', 'function', 'tag', 'attr-name'],\n    style: {\n      color: 'rgb(40, 42, 46)'\n    }\n  }]\n};\nexport default theme;","import { useHighlight } from '@docpocalypse/code-live';\n\nimport React from 'react';\nimport theme from '@docpocalypse/code-live/themes/ultramin';\n\nexport function InlineHighlight({ code }) {\n  const { tokens, getTokenProps } = useHighlight({\n    theme,\n    code,\n    language: 'tsx',\n  });\n\n  return (\n    <>\n      {tokens.map((line, i) => (\n        // eslint-disable-next-line react/no-array-index-key\n        <React.Fragment key={i}>\n          {line.map((token, ii) => (\n            // eslint-disable-next-line react/no-array-index-key\n            <span key={ii} {...getTokenProps({ token, key: String(ii) })} />\n          ))}\n        </React.Fragment>\n      ))}\n    </>\n  );\n}\n","import React from 'react';\n\nimport typeExpression from './utils/jsDocTypeExpression';\n\nimport JsDocTypeWrapper from './JsDocTypeWrapper';\nimport { InlineHighlight } from './InlineTypeHighlight';\n\nexport interface JsDocFunctionSignatureProps {\n  definition: any;\n  ignoreParams: string[];\n  block?: boolean;\n}\n\nexport const isFunctionDef = (definition: any, recursive = true) =>\n  (definition.params && definition.params.length > 0) ||\n  (definition.returns && definition.returns.length > 0) ||\n  (recursive &&\n    definition.type &&\n    definition.type.typeDef &&\n    isFunctionDef(definition.type.typeDef, false));\n\nexport default function JsDocFunctionSignature({\n  block,\n  definition,\n  ignoreParams,\n}: JsDocFunctionSignatureProps) {\n  const params = definition.params\n    ? definition.params\n        .filter(param => !ignoreParams.includes(param.name))\n        .map(param => {\n          const type =\n            param.type &&\n            `${param.optional ? '?' : ''}: ${typeExpression(param.type)}`;\n          return `${param.name}${type || ''}`;\n        })\n    : [];\n\n  const returns =\n    definition.returns && definition.returns.length\n      ? typeExpression(definition.returns[0].type)\n      : 'void';\n\n  return (\n    <JsDocTypeWrapper block={block}>\n      <InlineHighlight code={`(${params.join(', ')}) => ${returns}`} />\n    </JsDocTypeWrapper>\n  );\n}\n","/* eslint-disable react/no-array-index-key */\n\nimport { graphql } from 'gatsby';\nimport React from 'react';\n\nimport TypeExpression from './JsDocTypeExpression';\nimport JsDocTypeWrapper from './JsDocTypeWrapper';\nimport JsDocFunctionSignature, {\n  isFunctionDef,\n} from './JsDocFunctionSignature';\n\nconst TypeComponent = ({ children }) => (\n  <span className=\"token builtin\">{children}</span>\n);\n\ninterface SignatureProps {\n  definition: any;\n  ignoreParams?: string[];\n  fallbackToName?: boolean;\n  block?: boolean;\n}\n\nexport default function JsDocSignature({\n  definition,\n  ignoreParams = [],\n  fallbackToName = false,\n  block = false,\n}: SignatureProps) {\n  if (isFunctionDef(definition, false)) {\n    return (\n      <JsDocFunctionSignature\n        block={block}\n        definition={definition}\n        ignoreParams={ignoreParams}\n      />\n    );\n  }\n\n  if (definition.type && definition.type.typeDef) {\n    return (\n      <JsDocSignature\n        definition={definition.type.typeDef}\n        fallbackToName\n        block={block}\n      />\n    );\n  }\n\n  if (definition.type) {\n    return (\n      <JsDocTypeWrapper block={block}>\n        <TypeExpression type={definition.type} />\n      </JsDocTypeWrapper>\n    );\n  }\n\n  if (fallbackToName && definition.name) {\n    return (\n      <JsDocTypeWrapper block={block}>\n        <TypeComponent>{definition.name}</TypeComponent>\n      </JsDocTypeWrapper>\n    );\n  }\n\n  return null;\n}\n\nexport const fragment = graphql`\n  fragment JsDocTypeFragment on DocumentationJs {\n    optional\n    type {\n      name\n      type\n      elements\n      expression\n      applications\n    }\n  }\n`;\n","/* eslint-disable import/no-cycle */\n\nimport { css as dcss } from 'astroturf';\nimport { graphql } from 'gatsby';\nimport React from 'react';\n\nimport TypeSignature from './JsDocTypeSignature';\n\ninterface Props {\n  definition: any;\n  title?: React.ReactNode;\n  showSignature?: boolean;\n  ignoreParams?: string[];\n  className?: string;\n}\n\nconst JsDocTitleSignature = ({\n  definition,\n  title,\n  showSignature = true,\n  ignoreParams = [],\n  className,\n}: Props) => {\n  if (!title && definition.name) {\n    title = (\n      <code>\n        {definition.name}\n        {definition.optional && '?'}\n      </code>\n    );\n  }\n\n  return (\n    <div\n      className={className}\n      css={dcss`\n        @component JsDocTitleSignature & {\n          @apply inline-flex items-center;\n\n          margin: calc(theme(margin.2) / -2);\n          flex-wrap: wrap;\n\n          & > *  {\n            margin: calc(theme(margin.2) / 2);\n          }\n        }\n      `}\n    >\n      {title}\n      {showSignature && (\n        <TypeSignature definition={definition} ignoreParams={ignoreParams} />\n      )}\n    </div>\n  );\n};\n\nexport default JsDocTitleSignature;\n\nexport const fragment = graphql`\n  fragment JsDocDescriptionFragment on DocumentationJs {\n    name\n    description {\n      childMdx {\n        body\n      }\n    }\n  }\n  fragment DocumentationFragment on DocumentationJs {\n    kind\n    ...JsDocDescriptionFragment\n    ...JsDocExampleFragment\n    ...JsDocMembersFragment\n    ...JsDocReturnBlockFragment\n  }\n`;\n","/* eslint-disable react/no-array-index-key */\nimport { graphql } from 'gatsby';\nimport React from 'react';\nimport Heading, { HeadingLevel } from './Heading';\n\nfunction JsDocExample({\n  definition,\n  level,\n}: {\n  definition: any;\n  level: HeadingLevel;\n}) {\n  const examples =\n    definition.examples && definition.examples.length\n      ? definition.examples\n      : definition.type && definition.type.typeDef;\n\n  if (examples && examples.length) {\n    return (\n      <div>\n        <Heading level={level}>Example</Heading>\n        {definition.examples.map((example, i) => (\n          <div className=\"gatsby-highlight\">\n            <pre key={`example ${i}`} className=\"language-javascript\">\n              <code\n                className=\"language-javascript\"\n                dangerouslySetInnerHTML={{\n                  __html: example.highlighted,\n                }}\n              />\n            </pre>\n          </div>\n        ))}\n      </div>\n    );\n  }\n\n  return null;\n}\n\nexport default JsDocExample;\n\nexport const fragment = graphql`\n  fragment JsDocExampleFragment on DocumentationJs {\n    examples {\n      highlighted\n    }\n    type {\n      typeDef {\n        examples {\n          highlighted\n        }\n      }\n    }\n  }\n`;\n","import { graphql } from 'gatsby';\nimport { css as dcss } from 'astroturf';\nimport React from 'react';\n\n// eslint-disable-next-line import/no-cycle\nimport DocBlock from './JsDocBlock';\nimport Heading, { HeadingLevel } from './Heading';\nimport List from './List';\n\nimport TitleSignature from './JsDocTitleSignature';\n\nconst DocList = ({ elements, level, ignoreParams }) => (\n  <List>\n    {elements\n      .filter(param => !ignoreParams.includes(param.name))\n      .map(param => (\n        <li\n          key={param.name}\n          css={dcss`\n            @component JsDocMemberListItem & {\n              margin-top: theme(margin.4);\n            }\n          `}\n        >\n          <TitleSignature definition={param} />\n          <DocBlock definition={param} depth={level + 1} />\n        </li>\n      ))}\n  </List>\n);\n\ninterface ParamsProps {\n  definition: any;\n  level: HeadingLevel;\n  ignoreParams?: string[];\n  block?: boolean;\n}\n\nfunction JsDocMembers({\n  definition,\n  level = 1,\n  ignoreParams = [],\n}: ParamsProps) {\n  if (definition.params && definition.params.length > 0) {\n    return (\n      <>\n        <Heading level={level}>Parameters</Heading>\n        <DocList\n          level={level}\n          elements={definition.params}\n          ignoreParams={ignoreParams}\n        />\n      </>\n    );\n  }\n  if (definition.properties && definition.properties.length > 0) {\n    return (\n      <>\n        {level === 1 && <Heading level={level}>Properties</Heading>}\n        <DocList\n          level={level}\n          elements={definition.properties}\n          ignoreParams={ignoreParams}\n        />\n      </>\n    );\n  }\n  if (\n    definition.members &&\n    definition.members.static &&\n    definition.members.static.length > 0\n  ) {\n    return (\n      <>\n        {level === 1 && <Heading level={level}>Fields</Heading>}\n        <DocList\n          level={level}\n          elements={definition.members.static}\n          ignoreParams={ignoreParams}\n        />\n      </>\n    );\n  }\n  if (definition.type && definition.type.typeDef) {\n    return <JsDocMembers definition={definition.type.typeDef} level={level} />;\n  }\n\n  return null;\n}\n\nexport default JsDocMembers;\n\nexport const fragment = graphql`\n  fragment DocumentationParamBase on DocumentationJs {\n    params {\n      name\n      ...JsDocDescriptionFragment\n      ...JsDocExampleFragment\n      ...JsDocTypeFragment\n    }\n    properties {\n      name\n      ...JsDocExampleFragment\n      ...JsDocTypeFragment\n    }\n    ...JsDocTypeFragment\n    ...JsDocDescriptionFragment\n    ...JsDocExampleFragment\n    ...JsDocReturnBlockFragment\n  }\n  fragment DocumentationParamsFieldsFragment on DocumentationJs {\n    ...DocumentationParamBase\n    members {\n      static {\n        ...DocumentationParamBase\n        type {\n          typeDef {\n            ...DocumentationParamBase\n          }\n        }\n      }\n    }\n    type {\n      typeDef {\n        ...DocumentationParamBase\n        members {\n          static {\n            ...DocumentationParamBase\n          }\n        }\n      }\n    }\n  }\n  fragment DocumentationParamsFragmentR1 on DocumentationJs {\n    ...DocumentationParamsFieldsFragment\n    params {\n      ...DocumentationParamsFieldsFragment\n    }\n    properties {\n      ...DocumentationParamsFieldsFragment\n    }\n    members {\n      static {\n        ...DocumentationParamsFieldsFragment\n      }\n    }\n    type {\n      typeDef {\n        ...DocumentationParamsFieldsFragment\n      }\n    }\n  }\n  fragment DocumentationParamsFragmentR2 on DocumentationJs {\n    ...DocumentationParamsFragmentR1\n    params {\n      ...DocumentationParamsFragmentR1\n    }\n    properties {\n      ...DocumentationParamsFragmentR1\n    }\n    members {\n      static {\n        ...DocumentationParamsFragmentR1\n      }\n    }\n    type {\n      typeDef {\n        ...DocumentationParamsFragmentR1\n      }\n    }\n  }\n  fragment JsDocMembersFragment on DocumentationJs {\n    ...DocumentationParamsFragmentR2\n    params {\n      ...DocumentationParamsFragmentR2\n    }\n    properties {\n      ...DocumentationParamsFragmentR2\n    }\n    members {\n      static {\n        ...DocumentationParamsFragmentR2\n      }\n    }\n    type {\n      typeDef {\n        ...DocumentationParamsFragmentR2\n      }\n    }\n  }\n`;\n","/* eslint-disable import/no-cycle */\n\nimport { css as dcss } from 'astroturf';\nimport { graphql } from 'gatsby';\nimport { MDXRenderer } from 'gatsby-plugin-mdx';\nimport React from 'react';\n\nconst JsDocDescription = ({ definition }) => {\n  const description =\n    definition.description || (definition.type && definition.type.typeDef);\n\n  if (!description) return null;\n\n  return (\n    <div\n      css={dcss`\n        @component JsDocDescription & {\n          margin-top: 0.5em;\n\n          & p {\n            margin: 0;\n          }\n        }\n      `}\n    >\n      <MDXRenderer>{description.childMdx.body}</MDXRenderer>\n    </div>\n  );\n};\n\nexport default JsDocDescription;\n\nexport const fragment = graphql`\n  fragment JsDocDescriptionFragment on DocumentationJs {\n    name\n    description {\n      childMdx {\n        body\n      }\n    }\n  }\n`;\n","/* eslint-disable import/no-cycle */\n\nimport { graphql } from 'gatsby';\nimport React from 'react';\n\nimport DocBlock from './JsDocBlock';\nimport Heading, { HeadingLevel } from './Heading';\nimport JsDocTitleSignature from './JsDocTitleSignature';\n\ninterface Props {\n  definition: any;\n  level: HeadingLevel;\n}\n\nexport default function JsDocReturnBlock({ definition, level }: Props) {\n  let def = definition.returns?.length ? definition : definition.type?.typeDef;\n\n  if (!def?.returns?.length) return null;\n\n  def = def.returns[0];\n\n  return (\n    <>\n      <Heading level={level}>\n        Return Value <JsDocTitleSignature definition={def} />\n      </Heading>\n      <DocBlock definition={def} depth={level} />\n    </>\n  );\n}\n\nexport const fragment = graphql`\n  fragment JsDocReturnBlockFragment on DocumentationJs {\n    returns {\n      ...JsDocDescriptionFragment\n      ...JsDocTypeFragment\n    }\n  }\n`;\n","/* eslint-disable import/no-cycle */\n\nimport { graphql } from 'gatsby';\nimport React from 'react';\n\nimport ExamplesBlock from './JsDocExamples';\nimport Members from './JsDocMembers';\nimport Description from './JsDocDescription';\nimport ReturnBlock from './JsDocReturnBlock';\nimport { HeadingLevel } from './Heading';\n\ninterface Props {\n  definition: any;\n  depth: HeadingLevel;\n  ignoreParams?: string[];\n}\n\nconst JsDocBlock = ({ definition, depth = 2, ignoreParams = [] }: Props) => {\n  if (!definition) return null;\n\n  const nextLevel: HeadingLevel = (depth + 1) as any;\n\n  return (\n    <>\n      <Description definition={definition} />\n      <Members\n        definition={definition}\n        level={nextLevel}\n        ignoreParams={ignoreParams}\n      />\n      <ReturnBlock definition={definition} level={nextLevel} />\n      <ExamplesBlock definition={definition} level={nextLevel} />\n    </>\n  );\n};\n\nexport default JsDocBlock;\n\nexport const fragment = graphql`\n  fragment JsDocBlockFragment on DocumentationJs {\n    kind\n    ...JsDocDescriptionFragment\n    ...JsDocExampleFragment\n    ...JsDocMembersFragment\n    ...JsDocReturnBlockFragment\n  }\n`;\n","import React from 'react';\nimport { css as dcss } from 'astroturf';\n\nimport LinkedHeading from './LinkedHeading';\nimport typeExpression from './utils/jsDocTypeExpression';\nimport JsDocTitleSignature from './JsDocTitleSignature';\nimport JsDocBlock from './JsDocBlock';\n\nconst styles = dcss`\n  @component HookSignature {\n    margin-left: theme(margin.-5);\n\n    & > * {\n      padding-left: theme(padding.5);\n    }\n\n    & .count {\n      display: block;\n      position: absolute;\n      left: 0;\n\n      &::before {\n        content: 'ƒ';\n      }\n    }\n  }\n\n  .count {\n    display: none;\n  }\n`;\n\nfunction HookSignature({ definition, level }) {\n  const params = definition.params\n    ? definition.params.map(param => {\n        const type = param.type && `${param.optional ? '?' : ''}`;\n        return `${param.name}${type || ''}`;\n      })\n    : [];\n\n  const returns = definition.returns?.length\n    ? typeExpression(definition.returns[0].type)\n    : 'void';\n\n  const title = `ƒ (${params.join(', ')}) => ${returns}`;\n\n  return (\n    <li className={styles.HookSignature}>\n      <LinkedHeading\n        id={title}\n        title={title}\n        h={level}\n        css={dcss`position: relative;`}\n      >\n        <span className={styles.count} />\n        <JsDocTitleSignature definition={definition} />\n      </LinkedHeading>\n      <div>\n        <JsDocBlock depth={level} definition={definition} />\n      </div>\n    </li>\n  );\n}\n\nexport default HookSignature;\n","import React from 'react';\nimport dstyled from 'astroturf';\nimport ComponentImport from './ComponentImport';\nimport Example from './Example';\nimport LinkedHeading from './LinkedHeading';\nimport OutlineHeading from './OutlineHeading';\nimport PageLayout from './PageLayout';\nimport HookSignature from './HookSignature';\n\nconst SignatureList = dstyled('ul')`\n  list-style: none;\n  counter-reset: signature-list-counter;\n\n  & > li {\n    counter-increment: signature-list-counter;\n  }\n`;\n\nfunction HookPage({ data }) {\n  const { signatures, name, importName, example } = data.docpocalypse;\n\n  return (\n    <PageLayout>\n      <div>\n        <OutlineHeading h={1} id={`${name}-page`} title={name}>\n          {name}\n        </OutlineHeading>\n      </div>\n      <Example example={example} name={name} />\n\n      <LinkedHeading h={2} id={`${name}-api`}>\n        API\n      </LinkedHeading>\n      {importName && (\n        <ComponentImport importName={importName} docNode={data.docpocalypse} />\n      )}\n      <SignatureList>\n        {signatures?.map(doc => (\n          <HookSignature level={3} definition={doc} />\n        ))}\n      </SignatureList>\n    </PageLayout>\n  );\n}\n\nexport default HookPage;\n","import { graphql } from 'gatsby';\nimport React from 'react';\nimport HookPage from '../components/HookPage';\n\nfunction HookPageTemplate(props) {\n  return <HookPage {...props} />;\n}\n\nexport default HookPageTemplate;\n\nexport const pageQuery = graphql`\n  query($nodeId: String) {\n    docpocalypse(id: { eq: $nodeId }) {\n      id\n      name\n      importName\n      example {\n        ...Example_example\n      }\n      signatures {\n        ...JsDocBlockFragment\n      }\n    }\n  }\n`;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cls1\":\"JsDocTypeWrapper-JsDocWrapper-module--cls1--F9iCh\",\"cls2\":\"JsDocTypeWrapper-JsDocWrapper-module--cls2--368lX JsDocTypeWrapper-JsDocWrapper-module--cls1--F9iCh\",\"block\":\"JsDocTypeWrapper-JsDocWrapper-module--block--3SV1r\"};","import React from 'react';\nimport { highlight } from '@docpocalypse/code-live';\nimport { DocumentationNode } from '@docpocalypse/gatsby-theme-core';\n\ninterface Props {\n  importName: string;\n  docNode?: DocumentationNode;\n}\n\nfunction ComponentImport({ importName, docNode: _, ...props }: Props) {\n  return (\n    <code\n      {...props}\n      // eslint-disable-next-line react/no-danger\n      dangerouslySetInnerHTML={{\n        __html: highlight(importName, 'js')\n      }}\n    />\n  );\n}\n\nexport default ComponentImport;\n"],"sourceRoot":""}