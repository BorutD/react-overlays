{"version":3,"sources":["webpack:///./node_modules/@docpocalypse/props-table/esm/utils.js","webpack:///./node_modules/gatsby-plugin-mdx/index.js","webpack:///./node_modules/@docpocalypse/gatsby-theme/src/components/PropsList-styles.module.css","webpack:///./node_modules/@docpocalypse/gatsby-theme/src/components/PropsList-CssProp2_div.module.css","webpack:///./node_modules/@docpocalypse/props-table/esm/index.js","webpack:///./node_modules/@docpocalypse/gatsby-theme/src/components/PropsList-CssProp1_div.module.css","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack:///./node_modules/@docpocalypse/gatsby-theme/src/components/PropDescription.tsx","webpack:///./node_modules/@docpocalypse/gatsby-theme/src/components/PropsList.tsx","webpack:///./node_modules/@docpocalypse/props-table/esm/PropTypeValue.js","webpack:///./node_modules/@docpocalypse/gatsby-theme/src/components/PropsList-tokenMap.module.css","webpack:///./node_modules/@docpocalypse/gatsby-theme/src/components/Example.tsx","webpack:///./node_modules/@docpocalypse/gatsby-theme/src/components/ComponentPage.tsx","webpack:///./node_modules/@docpocalypse/gatsby-theme/src/templates/component.tsx","webpack:///./node_modules/@docpocalypse/props-table/esm/DefaultValue.js","webpack:///./node_modules/@docpocalypse/gatsby-theme/src/components/ComponentImport.tsx","webpack:///./node_modules/@docpocalypse/props-table/esm/TypescriptTypeValue.js"],"names":["docletsToMap","doclets","Map","map","_ref","name","value","getDoclet","arguments","length","undefined","doc","find","d","cleanDocletValue","str","trim","replace","getDisplayTypeName","typeName","getTypeName","prop","type","tags","raw","joinElements","arr","delim","fn","reduce","acc","val","idx","list","item","isValidElement","cloneElement","key","concat","MDXRenderer","require","module","exports","isElementType","types","some","t","match","renderProps","propsData","tokenMap","_ref$elementTypes","elementTypes","filter","propData","_description$markdown","defaultValue","description","tsType","docletMap","descHtml","markdownRemark","html","renderedType","createElement","tokens","deprecated","get","Object","assign","React","useMDXComponents","mdx","useMDXScope","scope","components","children","props","mdxComponents","mdxScope","End","fullScope","keys","values","PropDescription","as","Tag","body","dangerouslySetInnerHTML","__html","pre","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","source","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty","_ref3","mapToTypes","propType","pt","docletType","signature","properties","entries","_ref2","required","elements","n","enumValues","Array","isArray","e","Example","example","useMemo","frontmatter","Props","default","ComponentPage","data","docpocalypse","importName","PageLayout","h","id","title","LinkedHeading","ComponentImport","docNode","metadata","ComponentPageTemplate","pageQuery","highlight","isPrimitive","toLowerCase","Fragment","getType","concrete","token","_tokens$token","renderName","className","renderNamedType","namedType","arrType","userType","arg","includes","isComplex"],"mappings":"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","file":"component---node-modules-docpocalypse-gatsby-theme-src-templates-component-tsx-15811899a80521dea48f.js","sourcesContent":["import \"core-js/modules/es6.array.reduce\";\nimport \"core-js/modules/es6.string.trim\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.array.map\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.map\";\nimport React from 'react';\nexport function docletsToMap(doclets) {\n  return new Map(doclets.map(function (_ref) {\n    var name = _ref.name,\n        value = _ref.value;\n    return [name, value];\n  }));\n}\nexport function getDoclet() {\n  var doclets = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var name = arguments.length > 1 ? arguments[1] : undefined;\n  var doc = doclets.find(function (d) {\n    return d.name === name;\n  });\n  return doc && doc.value;\n}\nexport function cleanDocletValue(str) {\n  return str.trim().replace(/^\\{/, '').replace(/\\}$/, '');\n}\nexport function getDisplayTypeName(typeName) {\n  if (typeName === 'func') return 'function';\n  if (typeName === 'bool') return 'boolean';\n  return typeName;\n}\nexport function getTypeName(prop) {\n  var type = prop.type;\n  var name = getDisplayTypeName(type === null || type === void 0 ? void 0 : type.name);\n  if (name === 'custom') return cleanDocletValue(getDoclet(prop.tags, 'type') || type.raw);\n  return name;\n}\nexport function joinElements(arr, delim, fn) {\n  return arr.reduce(function (acc, val, idx, list) {\n    var item = fn(val, idx);\n\n    if (React.isValidElement(item)) {\n      // eslint-disable-next-line react/no-array-index-key\n      item = React.cloneElement(item, {\n        key: idx\n      });\n    } // eslint-disable-next-line no-param-reassign\n\n\n    acc = acc.concat(item);\n    return idx === list.length - 1 ? acc : acc.concat(delim);\n  }, []);\n}","/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PropListRequiredBadge\":\"PropsList-styles-module--PropListRequiredBadge--3a5lz\",\"PropListTypeDefinition\":\"PropsList-styles-module--PropListTypeDefinition--2WeRN\",\"PropListDefaultValue\":\"PropsList-styles-module--PropListDefaultValue--2f8VQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cls1\":\"PropsList-CssProp2_div-module--cls1--3aeEt\",\"cls2\":\"PropsList-CssProp2_div-module--cls2--vaqvT PropsList-CssProp2_div-module--cls1--3aeEt\"};","import \"core-js/modules/es6.object.assign\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/es6.array.map\";\nimport \"core-js/modules/es6.regexp.match\";\nimport \"core-js/modules/es6.array.some\";\nimport sortBy from 'lodash/sortBy';\nimport React from 'react';\nimport DefaultValue from './DefaultValue';\nimport PropTypeValue from './PropTypeValue';\nimport TypescriptTypeValue from './TypescriptTypeValue';\nimport { docletsToMap, getTypeName } from './utils';\nexport * from './types';\n\nvar isElementType = function isElementType(name, types) {\n  return types.some(function (t) {\n    if (typeof t === 'string') return t === name;\n    return !!(name === null || name === void 0 ? void 0 : name.match(t));\n  });\n};\n\nexport default function renderProps(propsData) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      tokenMap = _ref.tokenMap,\n      _ref$elementTypes = _ref.elementTypes,\n      elementTypes = _ref$elementTypes === void 0 ? ['elementType', /React\\.ComponentType(<.*>)?/] : _ref$elementTypes;\n\n  return sortBy(propsData, 'name').filter(function (prop) {\n    return !prop.tags.find(function (d) {\n      return d.name === 'private' || d.name === 'ignore';\n    });\n  }).map(function (propData) {\n    var _description$markdown;\n\n    var name = propData.name,\n        type = propData.type,\n        defaultValue = propData.defaultValue,\n        description = propData.description,\n        tags = propData.tags,\n        tsType = propData.tsType;\n    var docletMap = docletsToMap(tags);\n    var typeName = getTypeName(propData);\n    var descHtml = (description === null || description === void 0 ? void 0 : (_description$markdown = description.markdownRemark) === null || _description$markdown === void 0 ? void 0 : _description$markdown.html) || '';\n    var renderedType = null;\n    if (tsType) renderedType = /*#__PURE__*/React.createElement(TypescriptTypeValue, {\n      type: tsType,\n      tags: tags,\n      tokens: tokenMap\n    });else if (type) renderedType = /*#__PURE__*/React.createElement(PropTypeValue, {\n      type: type,\n      tags: tags,\n      tokens: tokenMap\n    });\n    return {\n      name: name,\n      tags: tags,\n      typeName: typeName,\n      description: descHtml,\n      deprecated: docletMap.get('deprecated'),\n      type: renderedType,\n      defaultValue: defaultValue && /*#__PURE__*/React.createElement(DefaultValue, Object.assign({}, defaultValue, {\n        isElementType: isElementType(typeName, elementTypes)\n      })),\n      propData: propData\n    };\n  });\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cls1\":\"PropsList-CssProp1_div-module--cls1--1CFZN\",\"cls2\":\"PropsList-CssProp1_div-module--cls2--2RW19 PropsList-CssProp1_div-module--cls1--1CFZN\"};","const React = require(`react`)\nconst { useMDXComponents, mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  components,\n  children,\n  ...props\n}) {\n  const mdxComponents = useMDXComponents(components)\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, { components: mdxComponents, ...props })\n}\n","import { MDXRenderer } from 'gatsby-plugin-mdx';\nimport React from 'react';\n\ninterface Props {\n  as?: React.ElementType;\n  html?: string;\n  mdx?: { body: string };\n}\n\n/** @public */\nfunction PropDescription({ mdx, html, as: Tag = 'div' }: Props) {\n  if (mdx)\n    return (\n      <Tag>\n        <MDXRenderer>{mdx.body}</MDXRenderer>\n      </Tag>\n    );\n\n  return <Tag dangerouslySetInnerHTML={{ __html: html }} />;\n}\n\nexport default PropDescription;\n","import renderProps from '@docpocalypse/props-table';\nimport { TokenMap } from '@docpocalypse/props-table/src/TypescriptTypeValue';\nimport { MDXProvider } from '@mdx-js/react';\nimport { css as dcss } from 'astroturf';\nimport React, { useMemo } from 'react';\n\nimport LinkedHeading from './LinkedHeading';\nimport Pre from './Pre';\nimport PropDescription from './PropDescription';\n\nconst tokenMap: TokenMap = dcss`\n  .union {\n    & > *:not(:last-child)::after {\n      content: ' | ';\n    }\n  }\n`;\n\nconst styles = dcss`\n  @component PropListName {\n  }\n\n  @component PropListRequiredBadge {\n    @apply rounded bg-subtle text-accent text-xs font-default ml-2 px-2;\n  }\n\n  @component PropListTypeDefinition {\n    @apply ml-1 font-mono text-accent;\n  }\n\n  @component PropListDefaultValue {\n    @apply ml-1 text-accent font-mono;\n  }\n`;\n\nfunction PropsTable({ metadata }) {\n  const { name } = metadata;\n  const props = renderProps(metadata.props || [], { tokenMap });\n  const components = useMemo(\n    () => ({\n      pre: p => <Pre {...p} name={name} />,\n    }),\n    [name],\n  );\n\n  return (\n    <>\n      {props.map(prop => (\n        <React.Fragment key={prop.name}>\n          <LinkedHeading h={3} id={prop.name}>\n            <div\n              css={dcss`\n                @apply inline-flex items-center;\n              `}\n            >\n              <span className={styles.PropListName}>{prop.name}</span>\n              {prop.propData.required && (\n                <strong className={styles.PropListRequiredBadge}>\n                  required\n                </strong>\n              )}\n            </div>\n          </LinkedHeading>\n\n          <MDXProvider components={components}>\n            <PropDescription\n              mdx={prop.propData.description?.mdx}\n              html={prop.description}\n            />\n          </MDXProvider>\n          <div\n            css={dcss`\n              @apply mb-3 text-sm;\n            `}\n          >\n            <div>\n              <strong>type:</strong>\n              <span className={styles.PropListTypeDefinition}>{prop.type}</span>\n            </div>\n            {prop.defaultValue && (\n              <div className=\"mt-1\">\n                <strong>default:</strong>\n                <code className={styles.PropListDefaultValue}>\n                  {prop.defaultValue}\n                </code>\n              </div>\n            )}\n          </div>\n        </React.Fragment>\n      ))}\n    </>\n  );\n}\n\nexport default PropsTable;\n","import \"core-js/modules/es6.object.define-property\";\nimport \"core-js/modules/es6.object.define-properties\";\nimport \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.is-array\";\nimport _defineProperty from \"/Users/jquense/src/react-overlays/www/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/jquense/src/react-overlays/www/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es7.object.entries\";\nimport \"core-js/modules/es6.array.map\";\nimport \"core-js/modules/es6.function.name\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useMemo } from 'react';\nimport TypescriptTypeValue from './TypescriptTypeValue';\nimport { cleanDocletValue, getDisplayTypeName, getDoclet } from './utils';\n\nfunction mapToTypes(propType, tags) {\n  var map = function map(pt) {\n    return mapToTypes(pt, tags);\n  };\n\n  var name = getDisplayTypeName(propType.name);\n  var docletType = getDoclet(tags, 'type');\n\n  switch (propType.name) {\n    case 'object':\n      return {\n        name: 'Object'\n      };\n\n    case 'shape':\n      return {\n        name: 'signature',\n        type: 'object',\n        raw: '',\n        signature: {\n          properties: Object.entries(propType.value).map(function (_ref) {\n            var _ref2 = _slicedToArray(_ref, 2),\n                key = _ref2[0],\n                value = _ref2[1];\n\n            return {\n              key: key,\n              value: _objectSpread({}, map(value), {\n                required: value.required\n              })\n            };\n          })\n        }\n      };\n\n    case 'union':\n      return {\n        name: 'union',\n        elements: propType.value.map(function (n) {\n          return typeof name === 'string' ? {\n            name: n\n          } : n;\n        }).map(map)\n      };\n\n    case 'enum':\n      {\n        var enumValues = propType.value || [];\n\n        if (!Array.isArray(enumValues)) {\n          return {\n            name: enumValues\n          };\n        }\n\n        return {\n          name: 'union',\n          elements: enumValues.map(function (e) {\n            return {\n              name: e.value\n            };\n          })\n        };\n      }\n\n    case 'arrayOf':\n      return {\n        name: 'Array',\n        elements: [map(propType.value)]\n      };\n\n    case 'custom':\n      return {\n        name: cleanDocletValue(docletType || propType.raw)\n      };\n\n    default:\n      return {\n        name: 'literal',\n        value: name\n      };\n  }\n}\n\nfunction PropTypeValue(_ref3) {\n  var type = _ref3.type,\n      tags = _ref3.tags,\n      tokens = _ref3.tokens;\n  var tsType = useMemo(function () {\n    return mapToTypes(type, tags);\n  }, [type, tags]);\n  return /*#__PURE__*/React.createElement(TypescriptTypeValue, {\n    type: tsType,\n    tags: tags,\n    tokens: tokens\n  });\n}\n\nexport default PropTypeValue;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"union\":\"PropsList-tokenMap-module--union--10mxw\"};","import { MDXProvider } from '@mdx-js/react';\nimport { graphql } from 'gatsby';\nimport { MDXRenderer } from 'gatsby-plugin-mdx';\nimport { useMDXScope } from 'gatsby-plugin-mdx/context';\nimport React, { useMemo } from 'react';\n\nimport BasePre from './Pre';\n\ninterface Props {\n  example: any;\n  name: string;\n}\n\nexport default function Example({ example, name }: Props) {\n  const scope = useMDXScope();\n  const pre = useMemo(() => {\n    return props => <BasePre {...props} name={name} />;\n  }, [name]);\n\n  return example ? (\n    <MDXProvider components={{ pre }}>\n      <MDXRenderer scope={{ frontmatter: example.frontmatter, ...scope }}>\n        {example.body}\n      </MDXRenderer>\n    </MDXProvider>\n  ) : null;\n}\n\nexport const fragment = graphql`\n  fragment Example_example on DocpocalypseExample {\n    body\n  }\n`;\n","import { MDXRenderer } from 'gatsby-plugin-mdx';\nimport React from 'react';\n\nimport ComponentImport from './ComponentImport';\nimport Example from './Example';\nimport LinkedHeading from './LinkedHeading';\nimport Heading from './OutlineHeading';\nimport PageLayout from './PageLayout';\n\nlet Props: any;\n\nif (process.env.DOCPOC_PROPS_LAYOUT === 'list') {\n  Props = require('./PropsList').default;\n} else {\n  Props = require('./PropsTable').default;\n}\n\nfunction ComponentPage({ data }) {\n  const { description, importName, name, example } = data.docpocalypse;\n\n  return (\n    <PageLayout>\n      <div>\n        <Heading h={1} id={`${name}-page`} title={name}>\n          {name}\n        </Heading>\n      </div>\n\n      <Example example={example} name={name} />\n\n      <LinkedHeading h={2} id={`${name}-api`}>\n        API\n      </LinkedHeading>\n      <div>\n        {importName && (\n          <ComponentImport\n            importName={importName}\n            docNode={data.docpocalypse}\n          />\n        )}\n      </div>\n\n      {description?.mdx && (\n        <div>\n          <MDXRenderer scope={{ React }}>{description.mdx.body}</MDXRenderer>\n        </div>\n      )}\n      <Props metadata={data.docpocalypse} />\n    </PageLayout>\n  );\n}\n\nexport default ComponentPage;\n","import { graphql } from 'gatsby';\nimport React from 'react';\nimport ComponentPage from '../components/ComponentPage';\n\nexport default function ComponentPageTemplate(props) {\n  return <ComponentPage {...props} />;\n}\n\nexport const pageQuery = graphql`\n  query($nodeId: String) {\n    docpocalypse(id: { eq: $nodeId }) {\n      id\n      name\n      importName\n      example {\n        ...Example_example\n      }\n      description {\n        ...PropsTable_description\n      }\n      ...PropsTable_metadata\n    }\n  }\n`;\n","import \"core-js/modules/es6.regexp.replace\";\nimport React from 'react';\n\nfunction DefaultValue(_ref) {\n  var value = _ref.value,\n      isElementType = _ref.isElementType;\n  if (value == null || value === 'undefined') return null; // eslint-disable-next-line no-param-reassign\n\n  if (isElementType) value = \"<\".concat(value.replace(/('|\")/g, ''), \">\");\n  return /*#__PURE__*/React.createElement(\"code\", null, value);\n}\n\nexport default DefaultValue;","import React from 'react';\nimport { highlight } from '@docpocalypse/code-live';\nimport { DocumentationNode } from '@docpocalypse/gatsby-theme-core';\n\ninterface Props {\n  importName: string;\n  docNode?: DocumentationNode;\n}\n\nfunction ComponentImport({ importName, docNode: _, ...props }: Props) {\n  return (\n    <code\n      {...props}\n      // eslint-disable-next-line react/no-danger\n      dangerouslySetInnerHTML={{\n        __html: highlight(importName, 'js')\n      }}\n    />\n  );\n}\n\nexport default ComponentImport;\n","import \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.function.name\";\nimport React from 'react';\nimport { getDoclet, joinElements } from './utils';\n\nvar isPrimitive = function isPrimitive(name) {\n  return name[0].toLowerCase() === name[0];\n};\n\nvar isArray = function isArray(t) {\n  return t.name === 'Array';\n};\n\nvar isComplex = function isComplex(t) {\n  return ['signature', 'union', 'tuple', 'intersect'].includes(t.name);\n};\n\nfunction getType(type, tags, tokens) {\n  var concrete = type;\n\n  var get = function get(t) {\n    return getType(t, tags, tokens);\n  };\n\n  var t = function t(token) {\n    var _tokens$token;\n\n    return (_tokens$token = tokens === null || tokens === void 0 ? void 0 : tokens[token]) !== null && _tokens$token !== void 0 ? _tokens$token : \"pt-token pt-\".concat(token);\n  };\n\n  function renderName(name) {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: t(isPrimitive(name) ? 'primitive' : 'name')\n    }, name);\n  }\n\n  function renderNamedType(namedType) {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: t('type_signature')\n    }, renderName(namedType.name), 'elements' in namedType && /*#__PURE__*/React.createElement(React.Fragment, null, '<', /*#__PURE__*/React.createElement(\"span\", {\n      className: t('elements')\n    }, joinElements(namedType.elements, ', ', get)), '>'));\n  }\n\n  function renderArray(arrType) {\n    return isComplex(arrType.elements[0]) ? renderNamedType(arrType) : /*#__PURE__*/React.createElement(\"span\", {\n      className: t('array')\n    }, get(arrType.elements[0]), \"[]\");\n  }\n\n  var userType = getDoclet(tags, 'type');\n  if (userType) return renderName(userType);\n\n  switch (concrete.name) {\n    case 'literal':\n      return /*#__PURE__*/React.createElement(\"span\", {\n        className: t('literal')\n      }, concrete.value);\n\n    case 'signature':\n      return /*#__PURE__*/React.createElement(\"span\", {\n        className: t(\"\".concat(concrete.type, \"-signature\"))\n      }, concrete.type === 'function' ? /*#__PURE__*/React.createElement(React.Fragment, null, \"(\", joinElements(concrete.signature.arguments, ', ', function (arg) {\n        return /*#__PURE__*/React.createElement(\"span\", {\n          className: t('argument')\n        }, arg.name, \": \", get(arg.type));\n      }), ') => ', /*#__PURE__*/React.createElement(\"span\", {\n        className: t('return')\n      }, get(concrete.signature[\"return\"]))) : concrete.raw);\n\n    case 'union':\n      return /*#__PURE__*/React.createElement(\"span\", {\n        className: t('union')\n      }, joinElements(concrete.elements, null, get));\n\n    case 'tuple':\n      {\n        return /*#__PURE__*/React.createElement(\"span\", {\n          className: t('tuple')\n        }, \"[\", joinElements(concrete.elements, ', ', get), \"]\");\n      }\n\n    case 'intersect':\n      return /*#__PURE__*/React.createElement(\"span\", {\n        className: t('intersect')\n      }, joinElements(concrete.elements, null, get));\n\n    default:\n      if (isArray(type)) return renderArray(type);\n      if (isPrimitive(type.name)) renderName(type.name);\n      return renderNamedType(type);\n  }\n}\n\nfunction TypescriptTypeValue(_ref) {\n  var type = _ref.type,\n      tags = _ref.tags,\n      tokens = _ref.tokens;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, getType(type, tags, tokens));\n}\n\nexport default TypescriptTypeValue;"],"sourceRoot":""}